// conjunction elimination
x = (y : A & B, B) {
    p2(y)
}

// disjunction introduction
x = (y : A, A + B) {
    cons(A, B, y)
}

// contradiction
x = (y : A & ~A, 0) {
    z = p1(y)
    f = p2(y)
    f(z)
}

// double negation of LEM
x = (y : ~(A + ~A), 0) {
    f = (a : A, 0) {
        b = cons(A, ~A, a)
        y(b)
    }
    g = (a : ~A, 0) {
        b = cons(A, ~A, a)
        y(b)
    }
    g(f)
}

// currying
x = (y : (A & B) > C, A > (B > C)) {
    (z : A, B > C) {
        (w : B, C) {
            both = <z, w>
            y(both)
        }
    }
}

// reverse currying
x = (y : A > (B > C), (A & B) > C) {
    (z : A & B, C) {
        a = p1(z)
        b = p2(z)
        f = y(a)
        f(b)
    }
}

// explosion example
x = (y : A & ~A, B + ~B) {
    z = p1(y)
    f = p2(y)
    bot = f(z)
    explode(bot, B + ~B)
}